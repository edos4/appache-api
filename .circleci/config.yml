version: 2

defaults: &defaults
  working_directory: ~/app

jobs:
  checkout_code:
    <<: *defaults
    docker:
      - image: circleci/ruby:2.7.2
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/app

  linting:
    <<: *defaults
    docker:
      - image: circleci/ruby:2.7.2
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: mkdir -p ~/test-results/linting
      - run:
          name: RuboCop
          command: |
            gem install rubocop:1.2.0  rubocop-performance:1.8.1 --no-document
            rubocop --require rubocop-performance \
                    --format progress \
                    --format RuboCop::Formatter::JUnitFormatter \
                    --out ~/test-results/rubocop.xml
          when: always
      - store_test_results:
          path: ~/test-results/linting
      - store_artifacts:
          path: ~/test-results/linting
  build:
    <<: *defaults
    docker:
      - image: circleci/ruby:2.7.2
      - image: circleci/postgres:9.6.16-alpine
      - image: circleci/redis:alpine
    steps:
      - checkout
      # Should keep same as Gemfile.lock
      - run:
          name: install bundler v2.1.4
          command: gem install bundler:2.1.4 && bundle -v

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: setup database
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load
            bundle exec rake db:seed
      - run:
          name: run tests
          command: |
            mkdir ~/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out ~/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results
          destination: test-results
workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_code
      - linting:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
